{"alert_action_builder": {"modular_alerts": [{"description": "Forward the Alert to a Splunk HTTP Event Collector", "largeIcon": "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", "smallIcon": "iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAFAElEQVRYR82XfUxbVRTA+0E/thYmYyPhI4ZEXWSIqbQFExEq4B+SkBkRBNLhXDenEZ248bHEaokki2JAAzGzUhg0lE0XMGDAyIgh0eg6moALMcFqUFfNhJIBBVva9573Nt7m9fW+j3Yzsf/Au+ece373nHPPvVcs+p/9xHfCc9JRRP350+YzX7z94zhzHuPHBct7kmUPfNJwLS4fcSnTnVa/91DX/mzVWThGBCli4HlnEl0OYdF3PFAJA0FndKfwm+k4Cmr5mlRkEZF8GbkjIDi5aaSQlIjFkXm4oLa9/suOVxfruKASAjo+pN+VyiQytom5oG7e8KZPn3evstnGBcRMUSJAfPUkCAgHEvw7tH7R5EqjyygRRfU3OCUItMaSJ7/nkDoQT3HzAnEVLl229Vdg9NLrCw3IeX2f5mv1foUhHhioywlEd7h5y2+/3LzYiBxUmg8XZeUmfx/eXZgddNe3vZAJn+3Kt19puXGUrZZqux+e/fSNH8px/YmtlrARou8iviLk6ytMOd9CsUDIKLATWhs+4TqIJjUYDOot8IPfOTk5F1ZWVl5CspKSkuyenh4PH2B9r2ZGnaaowDVSbA2xrcBsNp+dmprqcrlc4UU0NTU19/X19dCA/Ds7O4r5+fm4NgozAzHGCOjmmlc5/Zo7smV1Oh3Z2tqqrK2t3WWLQnd3d9XIyMgEguaKFvLDCVT/geZJdbriK7ZwarVaSogzqNfW1pYM4H1sUAhoazVw5dLphRqkFxUhroIrLy9fyMzMfMxut2/z1QmUQyi1Wr07NzenBJ+Rkx/ZsvnCAq394nt8/M2lb+iOhUaHbmOxWJJA3TkJgngEjtOjq31RJCswFIXTT08bFgi31eMFqqqq+lkmkznGxsbMKGJGo/FUc3OzlRml/xQI1I05Pz//O7Arr9KjVV1dXZmSkvLW4ODgo3cFCK2Sq6i5olhcXLxbUVGhBGmMXNJwO01wyiAQaH5UWVmZlD4pWi0YJ30+n9jpdGL7EA5WMJBv3f/laNPiU7jdhJu4srKSAMUrNZlM0zabLcZOr9dTLS0tOpBOF5qz7kNNQ/JBxYigombrQ3C8tLT05aysrDMOh+N+ehoLCwu9IDppzEV0dHQ8MTExcRWkWkqXCdr20ICtg+JaAIiMBkRmAUSNBA4jFzOk297enjozM7OOq7vIibDs3TdtcW8iG9ajIxQIBQdfcMlxaQMg1SqV6lu5XF4DjopenA44iLPBOfw7DqahV/OHKk2RgctEDFBjv3ZVsTfpAFfaOjs7n/P7/engLxYGdPXAxsaGnO2gRdEhQmRwoPF61KI5rx9sUMPDw6qhoSHf7OxslD3szJOTk8G8vLxRoBO5zgqpHdaUhQUWkeTkoSIC/kuSFGEzRr9KUTGDs43MyMhQut3uLhCR01CdWbx0mOMXddtSuXQvHFtdvpX6uWXlNjPdrHeXE+ABCN5/YTlFUqJ+Y2x/qaur+8zj8ZTk5uZmW63WIK6W0JjJriclUgnrg5I7Qv9K+Z7KXABsaeKqTSjjvd0dG9BtyJTSFOSA+fbijArjmU0SJGk7ej2qHwlOGVMR+2oFt5y133zt4+eW3oX6T58/fObAver3aU/9yDTgRId9KuZelDAQNDzyzoOn0u/bd0FoqqCe91ffR2Pnll4RasObMraJjNYCzx61LBMnD+0StwePzacKhaDrJQyUiDMhNv8AhdJ4Qw5WsyQAAAAASUVORK5CYII=", "label": "Forward Alert to Splunk HEC", "short_name": "forward_alert_to_splunk_hec", "parameters": [{"format_type": "dropdownlist", "required": true, "name": "splunk_hec_target", "label": "Splunk HEC Target", "default_value": "", "help_string": "Splunk HTTP Event Collector Target", "possible_values": {"Option1": "option1", "Option2": "option2", "Option3": "option3"}, "type": ""}, {"format_type": "text", "required": false, "name": "index", "label": "Index", "default_value": "", "help_string": "Index to which the events should be sent to (optional)", "type": "", "value": ""}, {"format_type": "text", "required": false, "name": "host", "label": "Host", "default_value": "", "help_string": "Host field for the event (optional)", "type": "", "value": ""}, {"format_type": "text", "required": false, "name": "source", "label": "Source", "default_value": "", "help_string": "Source field for the event (optional)", "type": "", "value": ""}, {"format_type": "text", "required": false, "name": "sourcetype", "label": "Sourcetype", "default_value": "", "help_string": "Sourcetype field for the event (optional)", "type": "", "value": ""}], "code": "\n# encoding = utf-8\n\ndef process_event(helper, *args, **kwargs):\n    \"\"\"\n    # IMPORTANT\n    # Do not remove the anchor macro:start and macro:end lines.\n    # These lines are used to generate sample code. If they are\n    # removed, the sample code will not be updated when configurations\n    # are updated.\n\n    [sample_code_macro:start]\n\n    # The following example sends rest requests to some endpoint\n    # response is a response object in python requests library\n    response = helper.send_http_request(\"http://www.splunk.com\", \"GET\", parameters=None,\n                                        payload=None, headers=None, cookies=None, verify=True, cert=None, timeout=None, use_proxy=True)\n    # get the response headers\n    r_headers = response.headers\n    # get the response body as text\n    r_text = response.text\n    # get response body as json. If the body text is not a json string, raise a ValueError\n    r_json = response.json()\n    # get response cookies\n    r_cookies = response.cookies\n    # get redirect history\n    historical_responses = response.history\n    # get response status code\n    r_status = response.status_code\n    # check the response status, if the status is not sucessful, raise requests.HTTPError\n    response.raise_for_status()\n\n\n    # The following example gets and sets the log level\n    helper.set_log_level(helper.log_level)\n\n    # The following example gets account information\n    user_account = helper.get_user_credential(\"<account_name>\")\n\n    # The following example gets the alert action parameters and prints them to the log\n    splunk_hec_target = helper.get_param(\"splunk_hec_target\")\n    helper.log_info(\"splunk_hec_target={}\".format(splunk_hec_target))\n\n    index = helper.get_param(\"index\")\n    helper.log_info(\"index={}\".format(index))\n\n    host = helper.get_param(\"host\")\n    helper.log_info(\"host={}\".format(host))\n\n    source = helper.get_param(\"source\")\n    helper.log_info(\"source={}\".format(source))\n\n    sourcetype = helper.get_param(\"sourcetype\")\n    helper.log_info(\"sourcetype={}\".format(sourcetype))\n\n\n    # The following example adds two sample events (\"hello\", \"world\")\n    # and writes them to Splunk\n    # NOTE: Call helper.writeevents() only once after all events\n    # have been added\n    helper.addevent(\"hello\", sourcetype=\"sample_sourcetype\")\n    helper.addevent(\"world\", sourcetype=\"sample_sourcetype\")\n    helper.writeevents(index=\"summary\", host=\"localhost\", source=\"localhost\")\n\n    # The following example gets the events that trigger the alert\n    events = helper.get_events()\n    for event in events:\n        helper.log_info(\"event={}\".format(event))\n\n    # helper.settings is a dict that includes environment configuration\n    # Example usage: helper.settings[\"server_uri\"]\n    helper.log_info(\"server_uri={}\".format(helper.settings[\"server_uri\"]))\n    [sample_code_macro:end]\n    \"\"\"\n\n    helper.log_info(\"Alert action forward_alert_to_splunk_hec started.\")\n\n    # TODO: Implement your alert action logic here\n    return 0\n", "uuid": "61b6a0834d4e404a9dd24ee4deccfb07"}]}, "basic_builder": {"appname": "TA-alert_forwarder", "friendly_name": "TA-alert_forwarder", "version": "1.0.0", "author": "Stjubit", "description": "Splunk Technical Add-on that adds an Alert Action which forwards Alerts to a Splunk HTTP Event Collector", "theme": "#FFFFFF", "large_icon": "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", "small_icon": "iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAFFUlEQVRYR82Ye0xbVRzHuW2hdYWG4gYB3GSaQIwNDgtlIo/w8A9IyaJjvCpIRvnDbBkCkSqgKaDJookDGRqgdGl5OSFRaYREMRoTEykwcYsawSWdm4QxtkHXgX3d6zk1h92Wc+9ty0wkacJ5/X6f8/t9z++ee4mQ/9kfsReeutF0avWq9UXTW7997munqk9+VRQheGKgcjYgHwFNpjs9/p6sK+oxcT3sc7sot77aLKCPQ1jUDgQqaCDojO4Utn0d08c3BIcE46Xjbq6M7AkIGlcPKyiC98AMG5Ttjn1k7PTiy2xQQQHVDimcPD7hlSK6Ezao1aW7B0zapXUmqICAfFPEZJQNiEtPfgHhQBz3nWuGuksxXmNAxgOqB6fqRMNzj0SmkVuBiJsTiE249DHrmt148bXFV5Dzyt6U78TSsJxAYOBcViAvhzftuosNi3XIwTGtLCM6UfwDbMcvzfK12hDyPz32/tSRkveTDROvX96Jiq+mSj9I/vrTxssv4ECZtISNUK0RnCLBv6eIS4RcdcV3nGujWCC0yL7lWjWqF2KR0czMTOn29vYd2E5ISBi0WCy1aCwjI+NgT0/PDS7AyvMpM+KosHymze4CYtpBW1ubZnp6+uzCwoJnTX19fUN3d/c5BJCVlWUHsGHz8/MBHRTfDDAC3Vi/LZo+84cdOUxNTaWam5uFpaWlDqYodHV1KYeGhkwImi1aaOOsQGVdzygl0SITUzjlcjnljzM4T6PRRAB4GxMUArLd+vuTsfqfK9A8rwixCa6goOBKbGzsURCB+1w6geMQKjw83JmbmyvSarVeJQGOM/nCAq1Z7h39ouXXWbpjf6NDX9PX1xeq1+t/dLlcz8J+enRPaJ8Oi0wM90iCnjYsEO6oBwpUXFx8TSgU6iYmJjpRxFQq1cnGxsYLCBqno4cOVFZW9k5ycvI3ra2t39KjVVJSopRIJG+CiD3/UIDQLtlEzRZFUMMcQIdeetpThCBQdnY2FRMTIxgf333zA85Iq9VKmM1mbB3CwfoNZFu3fzl2ZlGJO004w0VFRe6pqSm+Wq2e1ul0hb7r0tLSqKamJnl5efklNFb54ZEa8X6hR0+comaqQ7A/Jyfn1fj4+ObR0dHDsA0LJqzOCoViA0Qn0hemvb09f3Jy8iuQaj59zK9jT68PbA9VFKXCwsIU8Dj5iUk7oP5EmUym2zjdIaCb1zckk5rf72ELIx3I5XC7LtTMh+LSplQqS6RS6fcURR0fHh7+GDcnLy/v8c3NTQsORtV7ZHWfVBiDy8QuAVbr5LeE+wT72dLW0dFR7nQ6ozo7Oz/CweTn5zuAwEPn5uZYbxOki3INVpu9Ns26gAnKaDSKwc82MzPjtR5W5v7+fodMJjMaDAbsxS2o+xC4jvL+Skz3vNRRborUVZm9BIlqUlxcHAmeb6Ll5eVzICKnCIKAAufhogb7ThrStvmhPBH8f+NPV+T4GwubvnMZ7y51Iwp3CEF4jAOthOhUu+tLRUXF6MrKSnZSUtJhEBknEwjsrx1WkDweseMvoCssMsz1qswGwHTE2bQJxzhvdzX6VGuoiB+x48Dn3YsNSj2SToKY7Pgg3SQ5WDW3K/10G5xATNFC/Xevb709obnieaK/dFbW8uhB8bu4bQ5UzPJA/84XEaaN+A0EDRzrfOpU9JOS8/6mCs5bt9h6P2v55bS/awICohsFH6SugQ9Sh3COQFFdB0X1gL8QQaUsGOPBrPkHa5d4Q/NhOxQAAAAASUVORK5CYII=", "visible": true, "tab_version": "4.1.0", "tab_build_no": "0", "build_no": 1}, "global_settings_builder": {"global_settings": {"proxy_settings": {"proxy_type": "http"}, "log_settings": {}, "credential_settings": []}}}